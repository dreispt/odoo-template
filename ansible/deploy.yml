- name: Deploy
  hosts: localhost
  gather_facts: no
  vars:
  - odoo_dir: '{{ odoodir | default("/opt/odoo") }}'
  - db: '{{ database | default("MASTER") }}'
  - tag: '{{ git_tag | default("none") }}'
  - version: '{{ db_version | default("none") }}'
  - conf: '{{ config | default("debug.conf") }}'
  - data_dir: '{{ datadir | default("/home/odoo/.local/share/Odoo") }}'
  - svc: '{{ service | default("odoo") }}'
  tasks:
  - name: Stop Odoo
    service: name={{ svc }} state=stopped

  - name: Update OS
    apt: update_cache=yes upgrade=dist autoclean=yes autoremove=yes

  - name: Clean the repo
    command: git clean -df
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Clean the submodules
    command: git submodule foreach --recursive git clean -df
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Reset the repo
    command: git reset --hard
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Reset the submodules
    command: git submodule foreach --recursive git reset --hard
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Pull the repo
    command: git pull
      chdir={{ odoo_dir }}
    when: tag == "none"
    become: yes
    become_user: odoo

  - name: Rollback the repo to {{ tag }}
    command: git pull {{ tag }}
      chdir={{ odoo_dir }}
    when: not tag == "none"
    become: yes
    become_user: odoo

  - name: Sync submodules
    command: git submodule sync
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Update submodules
    command: git submodule update --init
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Update pip
    command: ./env/bin/pip install --upgrade pip
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Update the environment
    command: ./env/bin/pip install -r requirements.txt
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Update Odoo
    command: ./env/bin/python setup.py install
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo

  - name: Check if filestore exists
    stat:
      path: "{{ data_dir }}/filestore/{{ db }}"
    register: filestore

  - name: Get PostgreSQL password for Odoo
    shell: grep "db_password" /etc/odoo/{{ conf }} | sed -e 's/db_password = //g'
    register: pgpassword

  - name: Copy the database
    shell: psql -h localhost -U odoo template1 -c "CREATE DATABASE \"{{ db }}\" WITH TEMPLATE \"BACKUP\";"
    environment:
      PGPASSWORD: '{{ pgpassword.stdout }}'
    when: not filestore.stat.exists

  - name: Copy filestore
    command: cp -r BACKUP {{ db }}
      chdir={{ data_dir }}/filestore
    become: yes
    become_user: odoo
    when: not filestore.stat.exists

  - name: Get list of modules to update
    shell: echo `grep "UPDATE" {{ version }} || echo "none"` | sed -e 's/UPDATE=//g'
      chdir={{ odoo_dir }}/ansible
    when: tag == "none"
    register: update

  - name: Update {{ db }}
    shell: ./env/bin/odoo -c /etc/odoo/{{ conf }} -u {{ update.stdout }} -d {{ db }} --stop-after-init 2>&1 | tee /var/log/odoo/{{ db }}-update-{{ version }}.log
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo
    when: not db == "MASTER" and not update.stdout == "none" and tag == "none"

  - name: Get the list of modules to install
    shell: echo `grep "INSTALL" {{ version }} || echo "none"` | sed -e 's/INSTALL=//g'
      chdir={{ odoo_dir }}/ansible
    when: tag == "none"
    register: install

  - name: Install new modules in {{ db }}
    shell: ./env/bin/odoo -c /etc/odoo/{{ conf }} -i {{ install.stdout }} -d {{ db }} --stop-after-init 2>&1 | tee /var/log/odoo/{{ db }}-install-{{ version }}.log
      chdir={{ odoo_dir }}
    become: yes
    become_user: odoo
    when: not db == "MASTER" and not install.stdout == "none" and tag == "none"

  - name: Cleanup sessions
    file:
      path: "{{ data_dir }}/sessions"
      state: absent
    become: yes
    become_user: odoo

  - name: Start Odoo
    service: name={{ svc }} state=started
